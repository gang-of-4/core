version: '3'
services:
    gateway:
        image: nginx:mainline-alpine-slim
        container_name: gateway
        restart: unless-stopped
        ports:
            - '3000:80'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - core-network
        volumes:
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    turbo:
        container_name: app
        restart: unless-stopped
        build:
          context: .
          dockerfile: Dockerfile
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - core-network
        ports:
            - '5555:5555'
            - '50051:50051'
            - '50052:50052'
        volumes:
            - .:/app
            - .pnpm:/root/.local/share/pnpm/store
        depends_on:
            db:
                condition: service_healthy
    db:
        container_name: db
        restart: unless-stopped
        image: 'postgres:alpine3.18'
        environment:
            POSTGRES_USER: 'root'
            POSTGRES_PASSWORD: 'root'
        ports:
            - '5432:5432'
        volumes:
            - ./config/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - core-network
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -d accountsdb'"]
            retries: 3
            timeout: 3s
    kafka:
        container_name: kafka
        image: 'bitnami/kafka:latest'
        networks:
            - core-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics && .sh --bootstrap-server kafka:9092 --topic hc --describe"]
            start_period: 10s
            interval: 5s
            timeout: 10s
            retries: 5
        environment:
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
networks:
    core-network:
        driver: bridge
