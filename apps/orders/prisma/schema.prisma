generator client {
  provider = "prisma-client-js"
  output   = "./../node_modules/@prisma/client/orders"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ItemStatus {
  INPROGRESS
  READY
}

enum OrderStatus {
  INPROGRESS
  DELIVERED
  CANCELLED
}

model Order {
  uuid           String       @id @default(uuid()) @db.Uuid
  id             Int          @unique @default(autoincrement())
  userId         String       @db.Uuid
  addressId      String       @unique @db.Uuid
  total          Decimal?     @db.Decimal(10, 2)
  subtotal       Decimal?     @db.Decimal(10, 2)
  status         OrderStatus  @default(INPROGRESS)
  address        Address @relation(fields: [addressId], references: [id])
  items          Item[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  deletedAt      DateTime?
}

model Address {
  id         String @id @default(uuid()) @db.Uuid
  country    String
  city       String
  state      String
  street     String
  postalCode String
  notes      String
  Order      Order?
}

model Item {
  id        String      @id @default(uuid()) @db.Uuid
  name      String
  sku       String
  quantity  Int
  price     Decimal     @db.Decimal(10, 2)
  images    Image[]
  storeId   String      @db.Uuid
  orderId   String      @db.Uuid
  order     Order       @relation(fields: [orderId], references: [uuid])
  status    ItemStatus  @default(INPROGRESS)
  options   Option[]
  isVariant Boolean     @default(false)
}

model Image {
  id          String    @id @default(uuid()) @db.Uuid
  name        String
  extension   String
  url         String
  size        BigInt
  itemId      String    @db.Uuid
  item        Item @relation(fields: [itemId], references: [id])
}

model Option {
  id         String      @id @default(uuid()) @db.Uuid
  label      String
  value      String
  group_id   String      @db.Uuid
  group      OptionGroup @relation(fields: [group_id], references: [id])
  items      Item[]
}

enum OptionType {
  TEXT
  COLOR
}

model OptionGroup {
  id      String     @id @default(uuid()) @db.Uuid
  title   String
  type    OptionType @default(TEXT)
  order   Int
  options Option[]
}
